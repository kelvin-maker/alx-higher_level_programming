>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[]])
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(0, 0, 0)
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(0, 0, 0)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([], 1)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[]], 1)
[[]]
>>> matrix_divided([[0]], 1)
[[0.0]]
>>> matrix_divided([['x']], 1)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[float("inf")]], 1)
[[inf]]
>>> matrix_divided([[float("-inf")]], 1)
[[-inf]]
>>> matrix_divided([[float("nan")]], 1)
[[nan]]
>>> matrix_divided([[]], 'x')
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> matrix_divided([[]], 0)
[[]]
>>> matrix_divided([[]], float("inf"))
[[]]
>>> matrix_divided([[]], float("-inf"))
[[]]
>>> matrix_divided([[]], float("nan"))
[[]]
>>> matrix_divided([[0]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
>>> matrix_divided([[0]], float("inf"))
[[0.0]]
>>> matrix_divided([[0]], float("-inf"))
[[-0.0]]
>>> matrix_divided([[0]], float("nan"))
[[nan]]
