>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
>>> bg = BaseGeometry(1)
Traceback (most recent call last):
...
TypeError: object() takes no parameters
>>> bg = BaseGeometry()
>>> bg.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("value", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("value", None)
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", False)
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", "0")
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", (0,))
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", {0, 1})
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", [0, 1])
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", 0.0)
Traceback (most recent call last):
...
TypeError: value must be an integer
>>> bg.integer_validator("value", -1)
Traceback (most recent call last):
...
ValueError: value must be greater than 0
>>> bg.integer_validator("value", 0)
Traceback (most recent call last):
...
ValueError: value must be greater than 0
>>> bg.integer_validator("value", 1)
>>> bg.integer_validator("value", 2)
